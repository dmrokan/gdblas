name: Builds

on:
  push:
    tags:
      - "v*"

env:
  LIBNAME: libgdblas

concurrency:
  group: ci-${{github.actor}}-${{github.head_ref || github.run_number}}-${{github.ref}}-macos
  cancel-in-progress: true

jobs:
  build:
    runs-on: ${{matrix.os}}
    name: ${{matrix.name}}
    strategy:
      fail-fast: false
      matrix:
        include:
          - identifier: windows-debug
            os: windows-latest
            name: üèÅ Windows Debug
            target: template_debug
            platform: windows
            arch: x86_64
          - identifier: windows-release
            os: windows-latest
            name: üèÅ Windows Release
            target: template_release
            platform: windows
            arch: x86_64
          - identifier: macos-debug
            os: macos-latest
            name: üçé macOS (universal) Debug
            target: template_debug
            platform: macos
            arch: universal
          - identifier: macos-release
            os: macos-latest
            name: üçé macOS (universal) Release
            target: template_release
            platform: macos
            arch: universal
          - identifier: linux-debug
            os: ubuntu-latest
            name: üêß Linux Debug
            runner: ubuntu-20.04
            target: template_debug
            platform: linux
            arch: x86_64
          - identifier: linux-release
            os: ubuntu-latest
            name: üêß Linux Release
            runner: ubuntu-20.04
            target: template_release
            platform: linux
            arch: x86_64

    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Set up SCons
        shell: bash
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons==4.7.0
          scons --version
      - name: Linux dependencies
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -qq
          sudo apt-get install -qqq build-essential pkg-config
      - name: Setup MinGW for Windows/MinGW build
        if: ${{ matrix.platform == 'windows' }}
        uses: egor-tensin/setup-mingw@v2
        with:
          version: 12.2.0
      - name: Setup boost
        shell: sh
        run: |
          ./bootstrap.sh
          ./b2 headers
        working-directory: boost
      - name: Bootstrap patches
        shell: sh
        run: |
          patch -s -p0 < ../boost_noexception.patch
        working-directory: boost
      - name: Compile godot-cpp
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'
        working-directory: godot-cpp
      - name: Compile Extension
        shell: sh
        run: |
          scons target='${{ matrix.target }}' platform='${{ matrix.platform }}' arch='${{ matrix.arch }}'
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}
          path: |
            ${{ github.workspace }}/demo/addons

  release:
    name: Release
    runs-on: "ubuntu-latest"
    needs: [ build ]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download Artifacts
        id: download
        uses: actions/download-artifact@v3
      - name: Copy extension into demo
        run: cp -fr "${{ github.event.repository.name }}/${{ github.event.repository.name }}" demo/addons && cp -rf demo/addons demo3d/
      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: '${{ github.event.repository.name }}.zip'
          directory: '${{ github.event.repository.name }}'
      - name: Demo release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'demo.zip'
          path: 'demo'
      - name: Demo3D release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'zip'
          filename: 'demo3d.zip'
          path: 'demo3d'
      - name: Create and upload asset
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "${{ github.event.repository.name }}/${{ github.event.repository.name }}.zip,demo.zip,demo3d.zip"
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifactErrorsFailBuild: true
